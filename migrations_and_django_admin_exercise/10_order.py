from django.db import models
from datetime import date

# Create your models here.


class StatusChoices(models.TextChoices):
    PENDING = 'PN', 'Pending'
    COMPLETED = 'CMP', 'Completed'
    CANCELLED = 'CN', 'Cancelled'


class Order(models.Model):
    product_name = models.CharField(max_length=30)
    customer_name = models.CharField(max_length=100)
    order_date = models.DateField()
    status = models.CharField(max_length=30, choices=StatusChoices.choices)
    amount = models.PositiveIntegerField(default=1)
    product_price = models.DecimalField(max_digits=10, decimal_places=2)
    total_price = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    warranty = models.CharField(default='No warranty')
    delivery = models.DateField(blank=True, null=True)

# Generated by Django 5.0.4 on 2024-06-24 18:00


from django.db import migrations
from django.utils import timezone


def update_delivery_and_warranty(apps, schema_editor):
    order_model = apps.get_model('main_app', 'Order')

    for order in order_model.objects.all():
        if order.status == "Pending":
            order.delivery = order.order_date + timezone.timedelta(days=3)
            order.save()
        elif order.status == "Completed":
            order.warranty = "24 months"
            order.save()
        elif order.status == "Canceled":
            order.delete()


def reverse_delivery_and_warranty(apps, schema_editor):
    order_model = apps.get_model('main_app', 'Order')

    for order in order_model.objects.all():
        if order.status == "Pending":
            order.delivery = None
        elif order.status == "Completed":
            order.warranty = order_model._meta.get_field('warranty').default

        order.save()


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0015_order'),
    ]

    operations = [
        migrations.RunPython(update_delivery_and_warranty, reverse_delivery_and_warranty)
    ]